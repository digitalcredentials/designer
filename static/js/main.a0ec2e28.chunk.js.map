{"version":3,"sources":["JsonEditorComponent.js","FileUploadComponent.js","utils.js","CredentialLoader.js","Toolbar.js","ImageSubComponent.js","App.js","serviceWorker.js","index.js"],"names":["ajv","Ajv","allErrors","verbose","JsonEditorComponent","props","handleChange","jsonData","updateSubs","myRef","React","createRef","nextProps","this","current","jsonEditor","set","Fragment","Typography","variant","color","ref","value","onChange","ace","mode","allowedModes","Editor","modes","allValues","theme","Component","FileUploadComponent","accept","id","text","state","file","handleFileChosen","bind","e","target","files","setState","loadFile","Button","component","type","className","style","display","expandDataUrls","substitutions","i","length","objectPath","key","a","expanded","stringified","JSON","stringify","blob","Blob","saveAs","fileName","fn","CredentialLoader","loadJson","object","path","iter","o","p","Object","keys","forEach","k","concat","startsWith","push","join","getDataUrls","readFile","fileReader","FileReader","onloadend","handleJsonRead","readAsText","dccSamples","vcSamples","selectedSample","url","sampleUrl","sampleJson","fetch","then","res","json","map","sample","fileData","parse","result","name","console","log","IconButton","Select","onClick","label","padding","MyToolbar","event","checked","stripImages","Toolbar","Grid","container","direction","justify","alignItems","item","xs","Switch","inputProps","edge","title","downloadFile","ImageSubComponent","loadImage","idImage","slice","handleImageRead","readAsDataURL","subs","updated","element","subst","Table","width","tableLayout","TableBody","sub","TableRow","TableCell","src","icon","htmlFor","App","updateJsonData","strip","stripped","stripDataUrls","downloadCredential","AppBar","position","Container","Boolean","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0ec2e28.chunk.js","sourcesContent":["import React from 'react';\n\nimport { JsonEditor as Editor } from 'jsoneditor-react';\nimport Ajv from 'ajv';\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/monokai';\n\nimport 'jsoneditor-react/es/editor.min.css';\nimport { Typography } from '@material-ui/core';\n\n\nconst ajv = new Ajv({ allErrors: true, verbose: true });\n\n\nclass JsonEditorComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n  }\n\n  handleChange = jsonData => {\n    this.props.updateSubs(jsonData);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.myRef.current.jsonEditor.set(nextProps.jsonData);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h6\" color=\"inherit\">Edit JSON</Typography>\n        <Editor\n          ref={this.myRef}\n          value={this.props.jsonData}\n          onChange={this.handleChange}\n          ace={ace}\n          ajv={ajv}\n          mode='tree'\n          allowedModes={Editor.modes.allValues}\n          theme='ace/theme/monokai'\n        />\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default JsonEditorComponent;\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\n\nclass FileUploadComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.accept = props.accept;\n    this.id = props.id;\n    this.text = props.text;\n    this.state = {\n      file: ''\n    }\n    this.handleFileChosen = this.handleFileChosen.bind(this);\n  }\n\n  handleFileChosen(e) {\n    let file = e.target.files[0];\n    let id = e.target.id;\n    this.setState({ file: file });\n    this.props.loadFile(id, file);\n  }\n\n  render() {\n    return (\n      <Button variant=\"outlined\" color=\"inherit\" component=\"label\">\n        {this.text}\n        <input\n          type=\"file\"\n          id={this.id}\n          className='input-file'\n          accept={this.accept}\n          onChange={this.handleFileChosen}\n          style={{ display: \"none\" }}\n        />\n      </Button>\n    );\n  }\n}\n\nexport default FileUploadComponent;","import { saveAs } from 'file-saver';\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport objectPath from 'object-path';\n\n\nexport function getDataUrls(object) {\n  function iter(o, p) {\n    if (o && typeof o === 'object') {\n      Object.keys(o).forEach(function (k) {\n        iter(o[k], p.concat(k));\n      });\n      return;\n    }\n\n    if (typeof o == 'string' && o.startsWith(\"data:\")) {\n      path.push({\n        'key': p.join('.'),\n        'value': o\n      });\n    }\n  }\n\n  var path = [];\n  iter(object, []);\n  return path;\n}\n\nexport function stripDataUrls(jsonData, substitutions) {\n  for (var i = 0; i < substitutions.length; i++) {\n    objectPath.set(jsonData, substitutions[i].key, `<${substitutions[i].key}>`);\n  }\n  return jsonData;\n}\n\nexport function expandDataUrls(jsonData, substitutions) {\n  for (var i = 0; i < substitutions.length; i++) {\n    objectPath.set(jsonData, substitutions[i].key, substitutions[i].value);\n  }\n  return jsonData;\n}\n\nexport async function downloadCredential(jsonData, substitutions) {\n  const fileName = \"credential\";\n  let expanded = expandDataUrls(jsonData, substitutions);\n  let stringified = JSON.stringify(expanded, null, 2);\n  const blob = new Blob([stringified], { type: 'application/json;;charset=utf-8\"' });\n  saveAs(blob, fileName + '.json');\n}\n\nfunction handleFileChosen(fn) {\n  return function doHandle(e) {\n    let file = e.target.files[0];\n    let id = e.target.id;\n    fn(id, file);\n  }\n}\n\nexport function imageSelector(id, fn, icon) {\n\n  return (\n    <div>\n      <input\n        accept=\"image/png, image/jpeg\"\n        type=\"file\"\n        onChange={handleFileChosen(fn)}\n        id={id}\n        style={{ display: 'none', }}\n      />\n      <label htmlFor={id}>\n        <Button\n          variant=\"contained\"\n          component=\"span\"\n        >\n          {icon}\n        </Button>\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport FileUploadComponent from './FileUploadComponent';\nimport { getDataUrls } from './utils';\nimport { IconButton, Select, Typography } from '@material-ui/core';\n\nclass CredentialLoader extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dccSamples: [],\n      vcSamples: [],\n      selectedSample: '',\n      url: ''\n    };\n    this.readFile = this.readFile.bind(this);\n    this.handleJsonRead = this.handleJsonRead.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.loadJson = this.loadJson.bind(this);\n  }\n\n\n  async componentDidMount() {\n    const vcSamplesUrl = \"https://w3c-ccg.github.io/vc-examples/index.json\";\n    const sampleUrl = \"https://digitalcredentials.github.io/samples/university-degree.json\";\n\n    let dccSamples = [];\n    let vcSamples = [];\n    let sampleJson = {};\n\n    fetch(vcSamplesUrl)\n      .then(res => res.json())\n      .then(json => {\n        vcSamples = json.map(sample => {\n          return { value: sample.url, display: sample.type };\n        });\n      }).then(() => {\n        fetch(sampleUrl)\n          .then(res => res.json())\n          .then(json => {\n            dccSamples = [{ value: sampleUrl, display: 'DCC sample' }];\n            sampleJson = json;\n            this.loadJson(sampleJson);\n          }).then(() => {\n            this.setState({\n              ...this.state,\n              dccSamples: dccSamples,\n              vcSamples: vcSamples,\n              selectedSample: 'DCC sample',\n              url: sampleUrl\n            });\n          });\n      });\n  }\n\n  loadJson = (jsonData) => {\n    let substitutions = getDataUrls(jsonData);\n    this.props.handleChange(jsonData, substitutions);\n  }\n\n  readFile = (id, file) => {\n    this.fileReader = new FileReader();\n    this.fileReader.onloadend = this.handleJsonRead;\n    this.fileReader.readAsText(file);\n  };\n\n  handleJsonRead(fileData) {\n    let jsonData = JSON.parse(fileData.target.result);\n    this.loadJson(jsonData);\n  };\n\n  onChange(e) {\n    const value = e.target.value;\n    this.setState({\n      ...this.state,\n      [e.target.name]: value\n    });\n    console.log(`Loading ${value}`);\n    fetch(value)\n      .then(res => res.json())\n      .then(json => this.loadJson(json));\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Typography color=\"inherit\">Select a different credential:</Typography>\n        <IconButton>\n          <Select name=\"selectedSample\" onClick={this.onChange} >\n            <optgroup label=\"DCC Samples\">\n              {this.state.dccSamples.map((sample) => <option key={sample.value} value={sample.value}>{sample.display}</option>)}\n            </optgroup>\n            <optgroup label=\"VC Samples\">\n              {this.state.vcSamples.map((sample) => <option key={sample.value} value={sample.value}>{sample.display}</option>)}\n            </optgroup>\n          </Select>\n        </IconButton>\n        <Typography color=\"inherit\" style={{ padding: 10 }}>OR</Typography>\n        <FileUploadComponent id='credential' text='Upload' loadFile={this.readFile} accept='.json' />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CredentialLoader;","import React from 'react';\nimport 'typeface-roboto';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CredentialLoader from './CredentialLoader';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nclass MyToolbar extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange = (event) => {\n    this.setState({ ...this.state, [event.target.name]: event.target.checked });\n    this.props.stripImages(event.target.checked);\n  };\n\n\n  render() {\n    return (\n      <Toolbar>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h6\" color=\"inherit\">DCC Credential Designer</Typography>\n          </Grid>\n\n          <Grid item xs />\n          <Grid item>\n            <Typography color=\"inherit\">Strip Images</Typography>\n          </Grid>\n          <Grid>\n            <Switch\n              checked={this.state.checked}\n              onChange={this.handleChange}\n              name=\"checked\"\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n          </Grid>\n\n          <Grid item xs />\n          <CredentialLoader edge='start' title='Load a credential' handleChange={this.props.handleChange} />\n          <Grid item xs />\n          <IconButton color=\"inherit\">\n            <Typography color=\"inherit\">Download</Typography>\n            <GetAppIcon onClick={this.props.downloadFile} />\n          </IconButton>\n        </Grid>\n      </Toolbar>\n    );\n  }\n}\n\nexport default MyToolbar;\n","import React from 'react';\nimport 'jsoneditor-react/es/editor.min.css';\nimport { IconButton, Table, TableBody, TableCell, TableRow, Typography } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { imageSelector } from './utils';\n\n\nclass ImageSubComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      substitutions: this.props.substitutions\n    };\n    this.loadImage = this.loadImage.bind(this);\n    this.handleImageRead = this.handleImageRead.bind(this);\n    this.updateSubs = this.updateSubs.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.substitutions !== this.state.substitutions) {\n      this.setState({\n        substitutions: nextProps.substitutions\n      });\n    }\n  }\n\n  updateSubs(subs) {\n    this.setState({\n      substitutions: subs\n    });\n    this.props.updateSubs(subs);\n  }\n\n  loadImage = (id, file) => {\n    let idImage = id.slice(0, -5);\n\n    this.fileReader = new FileReader();\n    this.fileReader.id = idImage;\n    this.fileReader.onloadend = this.handleImageRead;\n    this.fileReader.readAsDataURL(file)\n  }\n\n  handleImageRead(fileData) {\n    let id = fileData.target.id;\n    let value = fileData.target.result;\n    let subs = this.state.substitutions;\n    let updated = false;\n    subs.forEach(element => {\n      if (element.key === id) {\n        element.value = value;\n        updated = true;\n      }\n    });\n    if (!updated) {\n      // new image\n      let subst = `<dataUri.${id}>`;\n      subs.push({ 'key': subst, 'value': value });\n    }\n    this.updateSubs(subs);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h6\" color=\"inherit\">Images</Typography>\n        <Typography variant=\"body\" color=\"inherit\">\n          Corresponds to data urls in json editor\n        </Typography>\n\n        <Table style={{ width: \"auto\", tableLayout: \"auto\" }}>\n          <TableBody>\n            {this.state.substitutions?.map((sub) =>\n\n              <TableRow key={sub.key + \".row\"}>\n                <TableCell key={sub.key + \".cell1\"}>{sub.key}</TableCell>\n                <TableCell key={sub.key + \".cell2\"}><img id={sub.key} src={sub.value} width='100px' /></TableCell>\n                <TableCell key={sub.key + \".cell3\"}>\n                  {imageSelector(sub.key + \".file\", this.loadImage, < CreateIcon />)}\n                </TableCell>\n                <TableCell key={sub.key + \".cell4\"}>\n\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n\n        </Table>\n      </React.Fragment>\n    )\n  }\n}\n\n\nexport default ImageSubComponent;\n\n","import React from 'react';\nimport 'typeface-roboto';\nimport JsonEditorComponent from './JsonEditorComponent';\nimport MyToolbar from './Toolbar';\nimport { downloadCredential, stripDataUrls, expandDataUrls } from './utils';\nimport { AppBar, Container } from '@material-ui/core';\nimport ImageSubComponent from './ImageSubComponent';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jsonData: '',\n      substitutions: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.updateJsonData = this.updateJsonData.bind(this);\n    this.updateSubs = this.updateSubs.bind(this);\n    this.downloadFile = this.downloadFile.bind(this);\n    this.stripImages = this.stripImages.bind(this);\n  }\n\n  handleChange = (jsonData, subs) => {\n    this.setState({\n      ...this.state,\n      jsonData: jsonData,\n      substitutions: subs\n    });\n  };\n\n  updateJsonData = (jsonData) => {\n    this.setState({\n      ...this.state,\n      jsonData: jsonData\n    });\n  };\n\n  updateSubs = (substitutions) => {\n    this.setState({\n      ...this.state,\n      substitutions: substitutions\n    });\n  };\n\n  stripImages = (strip) => {\n    this.setState({\n      ...this.state,\n      strip: strip\n    });\n    if (strip) {\n      let stripped = stripDataUrls(this.state.jsonData, this.state.substitutions);\n      this.updateJsonData(stripped);\n    } else {\n      let expanded = expandDataUrls(this.state.jsonData, this.state.substitutions);\n      this.updateJsonData(expanded);\n    }\n  }\n\n  downloadFile = () => {\n    downloadCredential(this.state.jsonData, this.state.substitutions);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <AppBar position=\"static\">\n          <MyToolbar downloadFile={this.downloadFile} handleChange={this.handleChange} stripImages={this.stripImages} />\n        </AppBar>\n        <Container>\n          <JsonEditorComponent jsonData={this.state.jsonData} updateJsonData={this.updateJsonData} />\n          <ImageSubComponent substitutions={this.state.substitutions} updateSubs={this.updateSubs} />\n\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider >\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}